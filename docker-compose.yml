version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: govtjobsnow_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: govtjobsnow
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # Security hardening
      POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256 --auth-local=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-backup:/backup:rw
    # PostgreSQL port only accessible internally 
    # Use different port if you need external access to avoid conflicts
    # ports:
    #   - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    # Logging configuration
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    # Security hardening
    security_opt:
      - no-new-privileges:true
    read_only: false  # PostgreSQL needs write access
    tmpfs:
      - /tmp
      - /var/run/postgresql
    networks:
      - govtjobs_network

  # Main Application  
  app:
    build: .
    container_name: govtjobsnow_app
    restart: unless-stopped
    
    # Bind to localhost only - host Nginx will proxy
    ports:
      - "127.0.0.1:4007:3000"
    
    # Use environment file for production secrets
    env_file:
      - .env.production
    
    environment:
      NODE_ENV: production
      PORT: 3000
      TZ: Asia/Kolkata
      BASE_URL: https://govtjobnow.com
      
    depends_on:
      postgres:
        condition: service_healthy
        
    volumes:
      - ./logs:/app/logs:rw
      - ./uploads:/app/uploads:rw
      # Create uploads with proper ownership for uid 1001
      
    networks:
      - govtjobs_network
      
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/stats || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M
    
    # Logging configuration
    logging:
      driver: json-file
      options:
        max-size: "20m"
        max-file: "5"
    
    # Security hardening
    security_opt:
      - no-new-privileges:true
    read_only: false  # App needs write access to logs and uploads
    user: "1001:1001"  # Run as non-root user
    tmpfs:
      - /tmp:exec,size=100M
    
    # Process limits
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      nproc:
        soft: 65536
        hard: 65536

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./postgres_data

networks:
  govtjobs_network:
    driver: bridge
    # Use custom subnet to avoid conflicts with existing networks
    ipam:
      config:
        - subnet: 172.25.0.0/16
    # Network security
    driver_opts:
      com.docker.network.bridge.name: govtjobs_br
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.driver.mtu: "1500"